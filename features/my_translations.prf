$$t_message($$_FILE_[TRANSLATIONS]: $$TRANSLATIONS)
$$t_message($$_FILE_[RESOURCES]: $$RESOURCES)
!isEmpty(TRANSLATIONS) {
  $$t_message($$_FILE_[PROJECT_ROOT]: $$PROJECT_ROOT)
  # создаю каталог transactions для хранения .qm файлов
  mkpath($$PROJECT_ROOT/translations)
  # Проверяю, что значение переменной TRANSLATIONS поменялось
  # с прошлого запуска qmake.
  # Очень вряд ли другие фичи будут менять переменную TRANSLATIONS,
  # так что я не беспокоюсь по этому поводу.
  _old_translations = $$cat($$PROJECT_ROOT/translations.txt)
  _current_translations = $$TRANSLATIONS
  _current_translations -= $$_old_translations
  _old_translations -= $$TRANSLATIONS
  _transaltions_diff = ALWAYS
#  _transaltions_diff = $$_old_translations $$_current_translations
  !isEmpty(_transaltions_diff)|!exists($$PROJECT_ROOT/translations.txt)|!exists($$PROJECT_ROOT/translations.qrc) {
    $$t_message($$_FILE_: regenerating translations.qrc)
    # создаю translations.qrc
    _translations_qrc += <RCC><qresource prefix=\"/\">$$escape_expand(\n)
    for(_translation_name, TRANSLATIONS) {
      _translation_name_qm = $$section(_translation_name,".", 0, 0).qm
      _translation_name_qm = $$section(_translation_name_qm, "/", -1)
      # Если файлы .qm не существует - создаю заглушки
      # Это нужно для того, чтобы к ним создались зависимости.
      # .ts файлы должны существовать, иначе построение не пройдет;
      # запустите lupdate в такой ситуации.
      system($$shell_path($$[QT_INSTALL_BINS]/lrelease) $$shell_path($$PROJECT_ROOT/$$_translation_name) -qm $$shell_path($$PROJECT_ROOT/translations/$$_translation_name_qm))
    }

    # Copying system QMs
    win32 {
        for(qm, QT_QM) {
            system(copy /Y $$replace(qm, /, \\) $$replace(PROJECT_ROOT, /, \\)\\translations\\)
        }
    }
    !win32 {
        $$t_message($$_FILE_[QT_QM]: $$QT_QM)
        system(cp -f $$QT_QM $$shell_path($$PROJECT_ROOT/translations/))
    }

    # Filling resource file
    FILELIST = $$files($$PROJECT_ROOT/translations/*.qm)
    for(_translation_name_qm, FILELIST) {
      _translation_name_qm = $$section(_translation_name_qm, "/", -1)
      _translations_qrc += <file>translations/$$_translation_name_qm</file>$$escape_expand(\n)
    }

    # Close resource file and write
    _translations_qrc += </qresource></RCC>$$escape_expand(\n)
    write_file($$PROJECT_ROOT/translations.qrc, _translations_qrc)
#    write_file($$PROJECT_ROOT/translations.txt, TRANSLATIONS);
#    QMAKE_CLEAN += $$shell_path($$PROJECT_ROOT/translations.txt)
  }

    # А НАДО ЛИ ЭТО??
  # Запуск lrelease в makefile
#  QMAKE_EXTRA_COMPILERS += _translations_lrelease
#  _translations_lrelease.input = TRANSLATIONS
#  _translations_lrelease.output = $$PROJECT_ROOT/translations/${QMAKE_FILE_BASE}.qm
#  _translations_lrelease.commands = $$[QT_INSTALL_BINS]/lrelease ${QMAKE_FILE_IN} -qm ${QMAKE_FILE_OUT}
#  _translations_lrelease.CONFIG += no_link

}
